{
  "numFailedTestSuites": 2,
  "numFailedTests": 3,
  "numPassedTestSuites": 3,
  "numPassedTests": 12,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 5,
  "numTotalTests": 15,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1581935654341,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 1,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1581935656281,
        "start": 1581935654383
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.github-action.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "GitHub Actions Test action.yml exists",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "action.yml exists"
        },
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "GitHub Actions Test can read action.yml",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "can read action.yml"
        },
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "GitHub Actions Test action.yml has valid yaml",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "action.yml has valid yaml"
        },
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "GitHub Actions Test action.yml has correct runs.using",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "action.yml has correct runs.using"
        },
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "GitHub Actions Test action.yml has runs.main and runs.post",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "action.yml has runs.main and runs.post"
        },
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "GitHub Actions Test runs.main and runs.post files exist",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "runs.main and runs.post files exist"
        },
        {
          "ancestorTitles": [
            "GitHub Actions Test"
          ],
          "duration": 57,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\"\u001b[39m\nReceived: \u001b[31m\"stdout > ::debug::Reading inputs\u001b[39m\n\u001b[31mstdout > Cloning repo into dir()\u001b[39m\n\u001b[31mstderr > fatal: could not create work tree dir '': No such file or directory\u001b[39m\n\u001b[31mstdout > Branch test-dummy missing. Creating an orphan\u001b[39m\n\u001b[31mstdout > ::error::ENOENT: no such file or directory, mkdir\u001b[39m\n\u001b[31m\"\u001b[39m\n    at ChildProcess.<anonymous> (/home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.github-action.ts:94:26)\n    at ChildProcess.emit (events.js:223:5)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:272:12)"
          ],
          "fullName": "GitHub Actions Test can run runs.main and runs.post end-to-end",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "can run runs.main and runs.post end-to-end"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mGitHub Actions Test › can run runs.main and runs.post end-to-end\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\"\u001b[39m\n    Received: \u001b[31m\"stdout > ::debug::Reading inputs\u001b[39m\n    \u001b[31mstdout > Cloning repo into dir()\u001b[39m\n    \u001b[31mstderr > fatal: could not create work tree dir '': No such file or directory\u001b[39m\n    \u001b[31mstdout > Branch test-dummy missing. Creating an orphan\u001b[39m\n    \u001b[31mstdout > ::error::ENOENT: no such file or directory, mkdir\u001b[39m\n    \u001b[31m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 92 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 93 | \u001b[39m      exec\u001b[33m.\u001b[39mon(\u001b[32m'exit'\u001b[39m\u001b[33m,\u001b[39m exitCode \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 94 | \u001b[39m        expect(messages)\u001b[33m.\u001b[39mtoBe(\u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 95 | \u001b[39m        expect(exitCode)\u001b[33m.\u001b[39mtoBe(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 96 | \u001b[39m        resolve(messages)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 97 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ChildProcess.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/end-to-end.github-action.ts\u001b[39m\u001b[0m\u001b[2m:94:26)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 2,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1581935657199,
        "start": 1581935656301
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.node.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "utils/clone"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "utils/clone clone is a function",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "clone is a function"
        },
        {
          "ancestorTitles": [
            "utils/clone"
          ],
          "duration": 47,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mflushed ou\u001b[27mt\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mthis tes\u001b[27mt\"\u001b[39m\n    at /home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.node.ts:44:25\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.node.ts:5:58)"
          ],
          "fullName": "utils/clone works with non-existent branch",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "works with non-existent branch"
        },
        {
          "ancestorTitles": [
            "utils/clone"
          ],
          "duration": 37,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mflushed ou\u001b[27mt\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mthis tes\u001b[27mt\"\u001b[39m\n    at /home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.node.ts:61:25\n    at Generator.next (<anonymous>)\n    at fulfilled (/home/runner/work/github-action-working-directory/github-action-working-directory/tests/end-to-end.node.ts:5:58)"
          ],
          "fullName": "utils/clone works with existing branch",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "works with existing branch"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mutils/clone › works with non-existent branch\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mflushed ou\u001b[27mt\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7mthis tes\u001b[27mt\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m    expect(dirExists)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 44 | \u001b[39m    expect(\u001b[32m'this test'\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[32m'flushed out'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m  test(\u001b[32m'works with existing branch'\u001b[39m\u001b[33m,\u001b[39m async () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/end-to-end.node.ts\u001b[39m\u001b[0m\u001b[2m:44:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/end-to-end.node.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mutils/clone › works with existing branch\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mflushed ou\u001b[27mt\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7mthis tes\u001b[27mt\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 | \u001b[39m    expect(dirExists)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 60 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 | \u001b[39m    expect(\u001b[32m'this test'\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[32m'flushed out'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/end-to-end.node.ts\u001b[39m\u001b[0m\u001b[2m:61:25\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat fulfilled (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/end-to-end.node.ts\u001b[39m\u001b[0m\u001b[2m:5:58)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1581935657550,
        "start": 1581935657220
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/runner/work/github-action-working-directory/github-action-working-directory/tests/utils.clone.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "utils/clone"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "utils/clone clone is a function",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "clone is a function"
        },
        {
          "ancestorTitles": [
            "utils/clone"
          ],
          "duration": 43,
          "failureMessages": [],
          "fullName": "utils/clone clone can be called for non-existent branch",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "clone can be called for non-existent branch"
        },
        {
          "ancestorTitles": [
            "utils/clone"
          ],
          "duration": 35,
          "failureMessages": [],
          "fullName": "utils/clone clone can be called for existing branch",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "clone can be called for existing branch"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1581935657839,
        "start": 1581935657569
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/runner/work/github-action-working-directory/github-action-working-directory/tests/utils.commitAndPush.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "utils/commitAndPush"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "utils/commitAndPush commitAndPush is a function",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "commitAndPush is a function"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 1,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1581935658066,
        "start": 1581935657858
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/home/runner/work/github-action-working-directory/github-action-working-directory/tests/utils.inputs.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "utils/readInputs"
          ],
          "duration": 1,
          "failureMessages": [],
          "fullName": "utils/readInputs readInputs is a function",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "readInputs is a function"
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/clone.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/clone.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 38
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 32
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 30
          }
        },
        "3": {
          "start": {
            "line": 5,
            "column": 18
          },
          "end": {
            "line": 5,
            "column": 26
          }
        },
        "4": {
          "start": {
            "line": 20,
            "column": 14
          },
          "end": {
            "line": 20,
            "column": 33
          }
        },
        "5": {
          "start": {
            "line": 22,
            "column": 2
          },
          "end": {
            "line": 22,
            "column": 39
          }
        },
        "6": {
          "start": {
            "line": 24,
            "column": 2
          },
          "end": {
            "line": 40,
            "column": 5
          }
        },
        "7": {
          "start": {
            "line": 33,
            "column": 21
          },
          "end": {
            "line": 40,
            "column": 4
          }
        },
        "8": {
          "start": {
            "line": 34,
            "column": 4
          },
          "end": {
            "line": 34,
            "column": 56
          }
        },
        "9": {
          "start": {
            "line": 36,
            "column": 4
          },
          "end": {
            "line": 36,
            "column": 42
          }
        },
        "10": {
          "start": {
            "line": 37,
            "column": 4
          },
          "end": {
            "line": 37,
            "column": 45
          }
        },
        "11": {
          "start": {
            "line": 38,
            "column": 4
          },
          "end": {
            "line": 38,
            "column": 73
          }
        },
        "12": {
          "start": {
            "line": 39,
            "column": 4
          },
          "end": {
            "line": 39,
            "column": 69
          }
        },
        "13": {
          "start": {
            "line": 42,
            "column": 2
          },
          "end": {
            "line": 42,
            "column": 28
          }
        },
        "14": {
          "start": {
            "line": 14,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 22
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "clone",
          "decl": {
            "start": {
              "line": 14,
              "column": 22
            },
            "end": {
              "line": 14,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 19,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": null
            }
          }
        },
        "1": {
          "name": "(anonymous_10)",
          "decl": {
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 33,
              "column": 19
            }
          },
          "loc": {
            "start": {
              "line": 33,
              "column": 21
            },
            "end": {
              "line": 40,
              "column": 4
            }
          }
        },
        "2": {
          "name": "(anonymous_11)",
          "decl": {
            "start": {
              "line": 33,
              "column": 21
            },
            "end": {
              "line": 33,
              "column": null
            }
          },
          "loc": {
            "start": {
              "line": 33,
              "column": 21
            },
            "end": {
              "line": 40,
              "column": 3
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 20,
              "column": 14
            },
            "end": {
              "line": 20,
              "column": 19
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 20,
                "column": 14
              },
              "end": {
                "line": 20,
                "column": 19
              }
            },
            {
              "start": {
                "line": 20,
                "column": 23
              },
              "end": {
                "line": 20,
                "column": 33
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 20,
              "column": 14
            },
            "end": {
              "line": 20,
              "column": 23
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 20,
                "column": 14
              },
              "end": {
                "line": 20,
                "column": 23
              }
            },
            {
              "start": {
                "line": 20,
                "column": 14
              },
              "end": {
                "line": 20,
                "column": 23
              }
            }
          ]
        }
      },
      "s": {
        "0": 2,
        "1": 2,
        "2": 2,
        "3": 2,
        "4": 4,
        "5": 4,
        "6": 4,
        "7": 4,
        "8": 4,
        "9": 4,
        "10": 4,
        "11": 4,
        "12": 4,
        "13": 4,
        "14": 2
      },
      "f": {
        "0": 4,
        "1": 4,
        "2": 4
      },
      "b": {
        "0": [
          0,
          4
        ],
        "1": [
          4,
          4
        ]
      }
    },
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/spawn.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/spawn.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": null
          }
        },
        "1": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 33
          }
        },
        "2": {
          "start": {
            "line": 14,
            "column": 21
          },
          "end": {
            "line": 14,
            "column": 32
          }
        },
        "3": {
          "start": {
            "line": 81,
            "column": 32
          },
          "end": {
            "line": 81,
            "column": 52
          }
        },
        "4": {
          "start": {
            "line": 84,
            "column": 4
          },
          "end": {
            "line": 91,
            "column": null
          }
        },
        "5": {
          "start": {
            "line": 94,
            "column": 14
          },
          "end": {
            "line": 102,
            "column": 30
          }
        },
        "6": {
          "start": {
            "line": 95,
            "column": 4
          },
          "end": {
            "line": 101,
            "column": 7
          }
        },
        "7": {
          "start": {
            "line": 96,
            "column": 6
          },
          "end": {
            "line": 100,
            "column": null
          }
        },
        "8": {
          "start": {
            "line": 97,
            "column": 8
          },
          "end": {
            "line": 97,
            "column": 52
          }
        },
        "9": {
          "start": {
            "line": 99,
            "column": 8
          },
          "end": {
            "line": 99,
            "column": 18
          }
        },
        "10": {
          "start": {
            "line": 104,
            "column": 2
          },
          "end": {
            "line": 104,
            "column": 19
          }
        },
        "11": {
          "start": {
            "line": 106,
            "column": 2
          },
          "end": {
            "line": 106,
            "column": 13
          }
        },
        "12": {
          "start": {
            "line": 75,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 16
          }
        },
        "13": {
          "start": {
            "line": 109,
            "column": 14
          },
          "end": {
            "line": 109,
            "column": 33
          }
        },
        "14": {
          "start": {
            "line": 130,
            "column": 2
          },
          "end": {
            "line": 132,
            "column": null
          }
        },
        "15": {
          "start": {
            "line": 131,
            "column": 4
          },
          "end": {
            "line": 131,
            "column": 26
          }
        },
        "16": {
          "start": {
            "line": 134,
            "column": 2
          },
          "end": {
            "line": 134,
            "column": 43
          }
        },
        "17": {
          "start": {
            "line": 134,
            "column": 22
          },
          "end": {
            "line": 134,
            "column": 43
          }
        },
        "18": {
          "start": {
            "line": 136,
            "column": 2
          },
          "end": {
            "line": 136,
            "column": 35
          }
        },
        "19": {
          "start": {
            "line": 123,
            "column": 0
          },
          "end": {
            "line": 123,
            "column": 16
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "spawn",
          "decl": {
            "start": {
              "line": 75,
              "column": 16
            },
            "end": {
              "line": 75,
              "column": 21
            }
          },
          "loc": {
            "start": {
              "line": 78,
              "column": 19
            },
            "end": {
              "line": 107,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 94,
              "column": 26
            },
            "end": {
              "line": 94,
              "column": 27
            }
          },
          "loc": {
            "start": {
              "line": 94,
              "column": 46
            },
            "end": {
              "line": 102,
              "column": 3
            }
          }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 95,
              "column": 20
            },
            "end": {
              "line": 95,
              "column": 28
            }
          },
          "loc": {
            "start": {
              "line": 95,
              "column": 31
            },
            "end": {
              "line": 101,
              "column": 5
            }
          }
        },
        "3": {
          "name": "exec",
          "decl": {
            "start": {
              "line": 123,
              "column": 16
            },
            "end": {
              "line": 123,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 125,
              "column": 36
            },
            "end": {
              "line": 137,
              "column": 1
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 85,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 53
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 85,
                "column": 8
              },
              "end": {
                "line": 85,
                "column": 53
              }
            },
            {
              "start": {
                "line": 86,
                "column": 8
              },
              "end": {
                "line": 91,
                "column": null
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 90,
              "column": 13
            },
            "end": {
              "line": 90,
              "column": null
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 90,
                "column": 13
              },
              "end": {
                "line": 90,
                "column": null
              }
            },
            {
              "start": {
                "line": 91,
                "column": 13
              },
              "end": {
                "line": 91,
                "column": 38
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": null
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 96,
                "column": 6
              },
              "end": {
                "line": 100,
                "column": null
              }
            },
            {
              "start": {
                "line": 96,
                "column": 6
              },
              "end": {
                "line": 100,
                "column": null
              }
            }
          ]
        },
        "3": {
          "loc": {
            "start": {
              "line": 125,
              "column": 32
            },
            "end": {
              "line": 125,
              "column": 36
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 125,
                "column": 32
              },
              "end": {
                "line": 125,
                "column": 36
              }
            }
          ]
        },
        "4": {
          "loc": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": null
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 130,
                "column": 2
              },
              "end": {
                "line": 132,
                "column": null
              }
            },
            {
              "start": {
                "line": 130,
                "column": 2
              },
              "end": {
                "line": 132,
                "column": null
              }
            }
          ]
        },
        "5": {
          "loc": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 43
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 134,
                "column": 2
              },
              "end": {
                "line": 134,
                "column": 43
              }
            },
            {
              "start": {
                "line": 134,
                "column": 2
              },
              "end": {
                "line": 134,
                "column": 43
              }
            }
          ]
        }
      },
      "s": {
        "0": 3,
        "1": 3,
        "2": 3,
        "3": 16,
        "4": 16,
        "5": 16,
        "6": 16,
        "7": 16,
        "8": 4,
        "9": 12,
        "10": 16,
        "11": 16,
        "12": 3,
        "13": 3,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 3
      },
      "f": {
        "0": 16,
        "1": 16,
        "2": 16,
        "3": 0
      },
      "b": {
        "0": [
          4,
          12
        ],
        "1": [
          0,
          12
        ],
        "2": [
          4,
          12
        ],
        "3": [
          0
        ],
        "4": [
          0,
          0
        ],
        "5": [
          0,
          0
        ]
      }
    },
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/commitAndPush.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/commitAndPush.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 38
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 32
          }
        },
        "2": {
          "start": {
            "line": 30,
            "column": 14
          },
          "end": {
            "line": 30,
            "column": 33
          }
        },
        "3": {
          "start": {
            "line": 32,
            "column": 2
          },
          "end": {
            "line": 32,
            "column": 26
          }
        },
        "4": {
          "start": {
            "line": 34,
            "column": 2
          },
          "end": {
            "line": 34,
            "column": 47
          }
        },
        "5": {
          "start": {
            "line": 36,
            "column": 2
          },
          "end": {
            "line": 36,
            "column": 20
          }
        },
        "6": {
          "start": {
            "line": 38,
            "column": 2
          },
          "end": {
            "line": 48,
            "column": 4
          }
        },
        "7": {
          "start": {
            "line": 50,
            "column": 2
          },
          "end": {
            "line": 50,
            "column": 17
          }
        },
        "8": {
          "start": {
            "line": 52,
            "column": 2
          },
          "end": {
            "line": 52,
            "column": 61
          }
        },
        "9": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 22
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "commitAndPush",
          "decl": {
            "start": {
              "line": 22,
              "column": 22
            },
            "end": {
              "line": 22,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 29,
              "column": 10
            },
            "end": {
              "line": 53,
              "column": null
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 30,
              "column": 14
            },
            "end": {
              "line": 30,
              "column": 19
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 14
              },
              "end": {
                "line": 30,
                "column": 19
              }
            },
            {
              "start": {
                "line": 30,
                "column": 23
              },
              "end": {
                "line": 30,
                "column": 33
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 30,
              "column": 14
            },
            "end": {
              "line": 30,
              "column": 23
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 30,
                "column": 14
              },
              "end": {
                "line": 30,
                "column": 23
              }
            },
            {
              "start": {
                "line": 30,
                "column": 14
              },
              "end": {
                "line": 30,
                "column": 23
              }
            }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 1,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 1
      },
      "f": {
        "0": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ]
      }
    },
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/readInputs.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/readInputs.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 38
          }
        },
        "1": {
          "start": {
            "line": 14,
            "column": 2
          },
          "end": {
            "line": 14,
            "column": 31
          }
        },
        "2": {
          "start": {
            "line": 16,
            "column": 17
          },
          "end": {
            "line": 16,
            "column": 60
          }
        },
        "3": {
          "start": {
            "line": 19,
            "column": 4
          },
          "end": {
            "line": 20,
            "column": 100
          }
        },
        "4": {
          "start": {
            "line": 22,
            "column": 14
          },
          "end": {
            "line": 22,
            "column": 48
          }
        },
        "5": {
          "start": {
            "line": 24,
            "column": 18
          },
          "end": {
            "line": 24,
            "column": 49
          }
        },
        "6": {
          "start": {
            "line": 26,
            "column": 15
          },
          "end": {
            "line": 26,
            "column": 43
          }
        },
        "7": {
          "start": {
            "line": 28,
            "column": 16
          },
          "end": {
            "line": 28,
            "column": 45
          }
        },
        "8": {
          "start": {
            "line": 30,
            "column": 20
          },
          "end": {
            "line": 30,
            "column": 53
          }
        },
        "9": {
          "start": {
            "line": 32,
            "column": 25
          },
          "end": {
            "line": 40,
            "column": 4
          }
        },
        "10": {
          "start": {
            "line": 42,
            "column": 2
          },
          "end": {
            "line": 42,
            "column": 16
          }
        },
        "11": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 16
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "readInputs",
          "decl": {
            "start": {
              "line": 13,
              "column": 16
            },
            "end": {
              "line": 13,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 13,
              "column": 26
            },
            "end": {
              "line": 43,
              "column": 1
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 25
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 19,
                "column": 4
              },
              "end": {
                "line": 19,
                "column": 25
              }
            },
            {
              "start": {
                "line": 20,
                "column": 4
              },
              "end": {
                "line": 20,
                "column": 100
              }
            }
          ]
        }
      },
      "s": {
        "0": 1,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 1
      },
      "f": {
        "0": 0
      },
      "b": {
        "0": [
          0,
          0
        ]
      }
    },
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/commit.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/commit.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 38
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 48
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 54
          }
        },
        "3": {
          "start": {
            "line": 7,
            "column": 2
          },
          "end": {
            "line": 15,
            "column": null
          }
        },
        "4": {
          "start": {
            "line": 8,
            "column": 50
          },
          "end": {
            "line": 8,
            "column": 62
          }
        },
        "5": {
          "start": {
            "line": 9,
            "column": 22
          },
          "end": {
            "line": 9,
            "column": 26
          }
        },
        "6": {
          "start": {
            "line": 11,
            "column": 4
          },
          "end": {
            "line": 11,
            "column": 70
          }
        },
        "7": {
          "start": {
            "line": 13,
            "column": 4
          },
          "end": {
            "line": 13,
            "column": 34
          }
        },
        "8": {
          "start": {
            "line": 14,
            "column": 4
          },
          "end": {
            "line": 14,
            "column": 25
          }
        },
        "9": {
          "start": {
            "line": 18,
            "column": 0
          },
          "end": {
            "line": 18,
            "column": 6
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "run",
          "decl": {
            "start": {
              "line": 6,
              "column": 15
            },
            "end": {
              "line": 6,
              "column": 18
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 18
            },
            "end": {
              "line": 16,
              "column": null
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0
      },
      "f": {
        "0": 0
      },
      "b": {}
    },
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/wait.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/utils/wait.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 3,
            "column": 2
          },
          "end": {
            "line": 3,
            "column": 71
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 27
          },
          "end": {
            "line": 3,
            "column": 71
          }
        },
        "2": {
          "start": {
            "line": 5,
            "column": 2
          },
          "end": {
            "line": 5,
            "column": 74
          }
        },
        "3": {
          "start": {
            "line": 5,
            "column": 24
          },
          "end": {
            "line": 5,
            "column": 74
          }
        },
        "4": {
          "start": {
            "line": 7,
            "column": 2
          },
          "end": {
            "line": 7,
            "column": 67
          }
        },
        "5": {
          "start": {
            "line": 7,
            "column": 32
          },
          "end": {
            "line": 7,
            "column": 65
          }
        },
        "6": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 16
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "wait",
          "decl": {
            "start": {
              "line": 2,
              "column": 16
            },
            "end": {
              "line": 2,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 2,
              "column": 41
            },
            "end": {
              "line": 8,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 7,
              "column": 21
            },
            "end": {
              "line": 7,
              "column": 28
            }
          },
          "loc": {
            "start": {
              "line": 7,
              "column": 32
            },
            "end": {
              "line": 7,
              "column": 65
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 3,
              "column": 2
            },
            "end": {
              "line": 3,
              "column": 71
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 3,
                "column": 71
              }
            },
            {
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 3,
                "column": 71
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 74
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 74
              }
            },
            {
              "start": {
                "line": 5,
                "column": 2
              },
              "end": {
                "line": 5,
                "column": 74
              }
            }
          ]
        }
      },
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0
      },
      "f": {
        "0": 0,
        "1": 0
      },
      "b": {
        "0": [
          0,
          0
        ],
        "1": [
          0,
          0
        ]
      }
    },
    "/home/runner/work/github-action-working-directory/github-action-working-directory/src/clone.ts": {
      "path": "/home/runner/work/github-action-working-directory/github-action-working-directory/src/clone.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 38
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 48
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 38
          }
        },
        "3": {
          "start": {
            "line": 7,
            "column": 2
          },
          "end": {
            "line": 18,
            "column": null
          }
        },
        "4": {
          "start": {
            "line": 8,
            "column": 43
          },
          "end": {
            "line": 8,
            "column": 55
          }
        },
        "5": {
          "start": {
            "line": 10,
            "column": 18
          },
          "end": {
            "line": 10,
            "column": 37
          }
        },
        "6": {
          "start": {
            "line": 12,
            "column": 4
          },
          "end": {
            "line": 12,
            "column": 49
          }
        },
        "7": {
          "start": {
            "line": 14,
            "column": 4
          },
          "end": {
            "line": 14,
            "column": 25
          }
        },
        "8": {
          "start": {
            "line": 16,
            "column": 4
          },
          "end": {
            "line": 16,
            "column": 34
          }
        },
        "9": {
          "start": {
            "line": 17,
            "column": 4
          },
          "end": {
            "line": 17,
            "column": 25
          }
        },
        "10": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 21,
            "column": 6
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "run",
          "decl": {
            "start": {
              "line": 6,
              "column": 15
            },
            "end": {
              "line": 6,
              "column": 18
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 18
            },
            "end": {
              "line": 19,
              "column": null
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0
      },
      "f": {
        "0": 0
      },
      "b": {}
    }
  }
}